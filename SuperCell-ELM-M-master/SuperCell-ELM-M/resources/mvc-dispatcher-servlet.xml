<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 激活注解功能 -->
    <context:annotation-config/>

    <!-- 配置需要扫描的组件 -->
    <context:component-scan base-package="com.supercell.elmm.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/view/**" location="/view/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="css/"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>

    <!-- 注解驱动，参数可以绑定到控制器上 -->
    <mvc:annotation-driven>
    	<mvc:message-converters register-defaults="true">
	    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	       <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
	    </bean>
   </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置ViewResolver -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置PropertyPlaceholderConfigurer -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:*.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置MultipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="5242880"/>
        <property name="maxInMemorySize" value="409600"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- 配置拦截器 -->
    <!-- TODO 在项目开发中请在这里配置拦截器，这里提供了模板 -->
    <!--配置拦截器, 多个拦截器,顺序执行 -->  
	
	 <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	 
	    <mvc:interceptors>    
	     <mvc:interceptor>    
	        <mvc:mapping path="/" />  
	        <mvc:mapping path="/merchant/**" />
	        <mvc:mapping path="/dishesController/**" />  
	        <mvc:mapping path="/orderController/**" />  
	        <mvc:mapping path="/complaint/**" /> 
	        <mvc:exclude-mapping path="/merchant/isExistPhoneNumber.do/*"/>
	        <mvc:exclude-mapping path="/merchant/login.do"/>
            <mvc:exclude-mapping path="/merchant/register.do"/>
            <mvc:exclude-mapping path="/merchant/getMerchantInfo.do/*"/>
	        <bean class="com.supercell.elmm.interceptor.LoginInterceptor"></bean>    
	  	 </mvc:interceptor>  
	    </mvc:interceptors> 
	    
	    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	
</beans>